name: Build and Sign App and Create Release

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Build app
        run: bash ./gradlew build --stacktrace

      - name: Get APK version
        uses: JantHsueh/get-apk-info-action@master
        id: apkInfo
        with:
          apkPath: app/build/outputs/apk/release/app-release-unsigned.apk

      - name: Check if version already exists
        uses: mukunku/tag-exists-action@v1.0.0
        id: checkTag
        with:
          tag: 'v${{ steps.apkInfo.outputs.versionNum }}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Fail if version already exists
        run: exit 0
        if: steps.checkTag.outputs.exists == 'true'

#      - name: Sign App APK
#        uses: r0adkll/sign-android-release@v1
#        id: sign_app
#        with:
#          releaseDirectory: app/build/outputs/apk/release
#          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
#          alias: ${{ secrets.ALIAS }}
#          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
#          keyPassword: ${{ secrets.KEY_PASSWORD }}
#        env:
#          // override default build-tools version (29.0.3) -- optional
#          BUILD_TOOLS_VERSION: "29.0.2"

        # TODO Create release

      # Create the release for this version
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: 'v${{ steps.apkInfo.outputs.versionNum }}'
          release_name: 'Release v${{ steps.apkInfo.outputs.versionNum }}'
          draft: false
          prerelease: false

      # Upload the APK to the created release
      - name: Upload Built APK to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/apk/release/app-release-unsigned.apk
          asset_name: app-release-unsigned.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Create Artifact
        uses: actions/upload-artifact@v2
        with:
          name: Unsigned app bundle
          path: app/build/outputs/apk/release/app-release-unsigned.apk
#          name: Signed app bundle
#          path: ${{steps.sign_app.outputs.signedReleaseFile}}
